{"ast":null,"code":"var _jsxFileName = \"/Users/victorjimenez/Desktop/webdev/assignment-3/bank-of-react-starter-code/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'; // Import other components\n\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport Login from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [accountBalance, setAccountBalance] = useState(1234567.89);\n  const [creditList, setCreditList] = useState([]);\n  const [debitList, setDebitList] = useState([]);\n  const [currentUser, setCurrentUser] = useState({\n    userName: 'Joe Smith',\n    memberSince: '11/22/99'\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const creditsResponse = await fetch('https://moj-api.herokuapp.com/credits');\n        const debitsResponse = await fetch('https://moj-api.herokuapp.com/debits');\n\n        if (!creditsResponse.ok || !debitsResponse.ok) {\n          throw new Error('One of the responses was not ok');\n        }\n\n        const creditList = await creditsResponse.json();\n        const debitList = await debitsResponse.json();\n        const creditTotal = creditList.reduce((sum, item) => sum + item.amount, 0);\n        const debitTotal = debitList.reduce((sum, item) => sum + item.amount, 0);\n        const accountBalance = creditTotal - debitTotal;\n        setCreditList(creditList);\n        setDebitList(debitList);\n        setAccountBalance(accountBalance);\n      } catch (error) {\n        console.error('Error fetching data:', error); // Optional: Set default values so the app can still run\n\n        setCreditList([]);\n        setDebitList([]);\n        setAccountBalance(0);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const addCredit = credit => {\n    const updatedCredits = [...creditList, credit];\n    const newBalance = accountBalance + credit.amount;\n    setCreditList(updatedCredits);\n    setAccountBalance(newBalance);\n  };\n\n  const addDebit = debit => {\n    const updatedDebits = [...debitList, debit];\n    const newBalance = accountBalance - debit.amount;\n    setDebitList(updatedDebits);\n    setAccountBalance(newBalance);\n  };\n\n  const mockLogIn = logInInfo => {\n    const newUser = { ...currentUser\n    };\n    newUser.userName = logInInfo.userName;\n    setCurrentUser(newUser);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: () => /*#__PURE__*/_jsxDEV(Home, {\n            accountBalance: accountBalance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/userProfile\",\n          render: () => /*#__PURE__*/_jsxDEV(UserProfile, {\n            userName: currentUser.userName,\n            memberSince: currentUser.memberSince\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          render: () => /*#__PURE__*/_jsxDEV(Login, {\n            mockLogIn: mockLogIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/credits\",\n          render: () => /*#__PURE__*/_jsxDEV(Credits, {\n            credits: creditList,\n            addCredit: addCredit,\n            accountBalance: accountBalance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/debits\",\n          render: () => /*#__PURE__*/_jsxDEV(Debits, {\n            debits: debitList,\n            addDebit: addDebit,\n            accountBalance: accountBalance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"IWe7EXVspmtxfeTbpPFw6h5Tw/s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/victorjimenez/Desktop/webdev/assignment-3/bank-of-react-starter-code/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","Switch","Home","UserProfile","Login","Credits","Debits","App","accountBalance","setAccountBalance","creditList","setCreditList","debitList","setDebitList","currentUser","setCurrentUser","userName","memberSince","fetchData","creditsResponse","fetch","debitsResponse","ok","Error","json","creditTotal","reduce","sum","item","amount","debitTotal","error","console","addCredit","credit","updatedCredits","newBalance","addDebit","debit","updatedDebits","mockLogIn","logInInfo","newUser"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport Login from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nconst App = () => {\n  const [accountBalance, setAccountBalance] = useState(1234567.89);\n  const [creditList, setCreditList] = useState([]);\n  const [debitList, setDebitList] = useState([]);\n  const [currentUser, setCurrentUser] = useState({\n    userName: 'Joe Smith',\n    memberSince: '11/22/99',\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const creditsResponse = await fetch('https://moj-api.herokuapp.com/credits');\n        const debitsResponse = await fetch('https://moj-api.herokuapp.com/debits');\n  \n        if (!creditsResponse.ok || !debitsResponse.ok) {\n          throw new Error('One of the responses was not ok');\n        }\n  \n        const creditList = await creditsResponse.json();\n        const debitList = await debitsResponse.json();\n  \n        const creditTotal = creditList.reduce((sum, item) => sum + item.amount, 0);\n        const debitTotal = debitList.reduce((sum, item) => sum + item.amount, 0);\n        const accountBalance = creditTotal - debitTotal;\n  \n        setCreditList(creditList);\n        setDebitList(debitList);\n        setAccountBalance(accountBalance);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        // Optional: Set default values so the app can still run\n        setCreditList([]);\n        setDebitList([]);\n        setAccountBalance(0);\n      }\n    };\n  \n    fetchData();\n  }, []);\n  \n\n  const addCredit = (credit) => {\n    const updatedCredits = [...creditList, credit];\n    const newBalance = accountBalance + credit.amount;\n    setCreditList(updatedCredits);\n    setAccountBalance(newBalance);\n  };\n  \n  const addDebit = (debit) => {\n    const updatedDebits = [...debitList, debit];\n    const newBalance = accountBalance - debit.amount;\n    setDebitList(updatedDebits);\n    setAccountBalance(newBalance);\n  };\n\n  const mockLogIn = (logInInfo) => {\n    const newUser = { ...currentUser };\n    newUser.userName = logInInfo.userName;\n    setCurrentUser(newUser);\n  };\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" render={() => <Home accountBalance={accountBalance} />} />\n          <Route exact path=\"/userProfile\" render={() => <UserProfile userName={currentUser.userName} memberSince={currentUser.memberSince} />} />\n          <Route exact path=\"/login\" render={() => <Login mockLogIn={mockLogIn} />} />\n          <Route exact path=\"/credits\" render={() => <Credits credits={creditList} addCredit={addCredit} accountBalance={accountBalance} />} />\n          <Route exact path=\"/debits\" render={() => <Debits debits={debitList} addDebit={addDebit} accountBalance={accountBalance} />} />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}